
const d = decode(10, [0,1,2,3,4])
const eyes = d

const t = Cipherkey.encrypt("THISISATESTOFTHEEMERGENCYBROADCASTSYSTEM", "SOMELONGERKEY", az26, Vigenere, Cipherkey.word)
console.log(t)

const s1 = d[0]
// const s1 = split(d[0], 2).map(v => v[0]).join("")
const s2 = d[0]
// const s2 = split(d[0].substring(1), 2).map(v => v[0]).join("")
console.log(split(d[0], 3).map(v => v[0]).join(""))

for (var i = 1; i < s2.length; i++) {
    // console.log(Vigenere.decrypt(s1.shift(i), s2, az83))
    const ct = Cipherkey.decrypt(s1.shift(i), s1, az83, Vigenere)
    const f = new Frequencies(ct, az83)
    const ic = f.ic()
    const chi = Chi.squared(ct).english
    // console.log(f.ic_mono(), ic, ct)
    // if (chi < 200) {
        console.log(chi, f.ic_mono(), ic, ct)
    // }
}

// https://macs4200.org/chapters/08/1/identifying-polyalphabetic.html
console.log(new Frequenciesic())
const pt1 = "THISISATESTOFTHEEMERGENCYBROADCASTSYSTEM"
console.log(new Frequencies(pt1).ic())
console.log(Chi.squared(pt1))
console.log(new Frequencies("THISISATESTOFTHEEMERGENCYBROADCASTSYSTEM").ic())
console.log(new Frequencies("3) STARTBYTHINKINGSOMETHING IFSOMETIMES A RANDOMWORD JUST ISN'T ENOUGH, AND!@#$%^&*()THATISWHERE THE MEDITATIONCUBE COMES INTO PLAY AFTER ALL.").ic())

const ct2 = "WEXRU EXRZY QDMFS CMFAB KLURE KVEBN BKLPO KODWR TBTOT AXNOK DRRFU DJKZH XVNHI XNBBB PAXDJ XROFZ RSORF TCHEK ZTVPF SBMIP ZONMU UNSSV PDEAR MXFHU IKRLI NHWBC KUNLM BTBZM WGZYB WJZPP TPADM YYBWJ ZZHAZ BUDYS YXXTL FHZMD KVSHA SVJPW ZZHSM VZDQP RLQCH QBCVF BJFJX SSHUC GPNKQ FQHQP HUSCV ODWEB GDQHE DVLGH XPCEP XLOHF VNBYI BBGDH QCIFJ JSEQA TYAKD ARACF TQBRD ODCJN FXKCF KSDPQ EGZTQ YGIBI ELGZX IBBXU EXAZU JSPJF XWFPB AVJXQ ORVWX UETIH LUDNK ENYDE XSTUI QJEGX KUEXW FNHVD EQXBQ OHSFJ LMBRX RSELY BZTHM OREHO BMTCP ZHDAW RLYBK WBLRL MBYVV YIFGZ ZMWGJ JRYFM IBSUH GDARP NIQXB CELUR JWGXP ZLPWZ AKQJL TQYIB FTOPX LJWNW FSQMW LALRI VPNXT XKXWF LLHFO RQFPX TVARB JEIND UEXHP UVDJW FFNGQ GTDZD MYDBC NPKMW PZXKG VAVZS JNGZM WGZSR NXTEH JWKHQ DETCM FFKLL FWGMF HPMUE XAZUJ TIDBF SHOTH DVUBD IPUNO DPXEO PNIFG XSPRL XYZLR OVALJ SLNCO AKDYL FCDHF EISVU MNFSC MFPMG LNJKD ETFTP AUXYL VDZDR MYPJT ZPAKD NKVUQ OBLHX VUDJG CAJTP BKPAK DYZZA TBOHU WVQCJ EJJXM FDTEO HAJLE MTOKH IPVIZ YZFCF OQHGR HQ"
console.log("ct2", new Frequencies(ct2).ic())
const pt2 = Trithemius.decrypt(ct2.replace(/ /g, ""), ABC.step(ABC.offset(az26, 17), 22), az26)
// const t1 = Trithemius.decrypt(ct2.replace(/ /g, ""), ABC.step(ABC.offset(az26, 17), 4), az26, Beaufort)
console.log(pt2)
console.log(Chi.squared(pt2))
console.log(new Frequencies(pt2).ic())
console.log(new Frequencies(pt2).ic_mono())
console.log(ABC.offset(az26, 17))
console.log(ABC.step(az26, 3))
console.log(ABC.step(ABC.offset(az26, 17), 22))

const pt3 = "FROMTHECORNEROFTHEDIVANOFPERSIANSADDLEBAGSONWHICHHEWASLYINGSMOKINGASWASHISCUSTOMINNUMERABLECIGARETTESLORDHENRYWOTTONCOULDJUSTCATCHTHEGLEAMOFTHEHONEYSWEETANDHONEYCOLOUREDBLOSSOMSOFALABURNUMWHOSETREMULOUSBRANCHESSEEMEDHARDLYABLETOBEARTHEBURDENOFABEAUTYSOFLAMELIKEASTHEIRSANDNOWANDTHENTHEFANTASTICSHADOWSOFBIRDSINFLIGHTFLITTEDACROSSTHELONGTUSSORESILKCURTAINSTHATWERESTRETCHEDINFRONTOFTHEHUGEWINDOWPRODUCINGAKINDOFMOMENTARYJAPANESEEFFECTANDMAKINGHIMTHINKOFTHOSEPALLIDJADEFACEDPAINTERSOFTOKYOWHOTHROUGHTHEMEDIUMOFANARTTHATISNECESSARILYIMMOBILESEEKTOCONVEYTHESENSEOFSWIFTNESSANDMOTIONTHESULLENMURMUROFTHEBEESSHOULDERINGTHEIRWAYTHROUGHTHELONGUNMOWNGRASSORCIRCLINGWITHMONOTONOUSINSISTENCEROUNDTHEDUSTYGILTHORNSOFTHESTRAGGLINGWOODBINESEEMEDTOMAKETHESTILLNESSMOREOPPRESSIVETHEDIMROAROFLONDONWASLIKETHEBOURDONNOTEOFADISTANTORGAN"
// console.log(Trithemius.encrypt(pt3, ABC.step(ABC.offset(az26, 17), 22)))
console.log(Trithemius.encrypt(pt3, ABC.step(ABC.offset(az26, 17), 4), az26))

const ptreplace(/ /g, "")
console.log(pt4)
console.log(pt4.duplicates(5, 40))

// https://macs4200.org/chapters/08/4/find-keylength-with-ic

const ct8 = "ZQQTK PQUWD PGMWD BQTXY LFQWL SHAJB UCIPV KUQEJ RBAAC LRSIZ ZCRWT LDFMT PGYXF ISOSE ASZXN PHTAY HHIIR ADDIJ LBFOE VKUWW VFFLV TCEXG HFFXF ZVGXF BFQEI ZOSEZ UGFGF UJUGK PCZWZ UQQJI VAFLV CSDCX YOPYR SQTEI HQFII VTAYI LRGGR AWARN LAGWK JCZXZ UIMPC FTAVX LHMRU LAMRT PDMXV VIDWV SJQWW YCYOE VKXIU NSBVV CWAYJ SMMGH BWDIU DSYYJ AGQXR ZWPIF SRZSK PCZWR URQQS YOOIW YSELF USEEE KOEAV SSMVE DSYYJ APQHR PZKYE SSMVE PBSWF TSFLZ UUILZ JVUXY HGOSJ AIERF ZAMPC SONSL YOZHR ULUIK FHAET XIUVV HBPXY PGPMW MWOYC AMMXK HQTIJ PHEIC MAAVV JZAWV SMFSR UOSIZ UKTMT ODDSX YSEWY HGSEZ USPEJ AFARX HGOIE KSZGP VJQVG YSVYU PQQEE KWZAY PQTTV YGARJ HBPXY PBSWR YSPEP IMPEP MWZHZ UUFLV PFDIR SZQZV SWZPZ LIAJK OSUVT VBHIE AWARR SJMPL LHTIJ HAQTI PBOMG SSEAY PQTLR CSEAV WHMAR FHDEU PHUSE HZMFL ZSEEE KKTMT OODID HYURX YOBMU OOHST HAARX AVQVV CSZYV ZCRWZ USOYI PGFWR UREXI PDBME NHTIK OWZXR DRDCM LWXJI VAMXK YOOXZ CSEYG LFEXZ AWARJ HFQAF YYURX HGMGK PJQPP PBXMK LFMXL YSMWZ UGAGZ LHKXY LQDIU BZUXP VTARV DFUXV YCDXY LDMVK POXMK FCREE VHTII MWZHJ HGBSN LFRYC HHAYT OGFSE LOZHR ZKTSC LGAQV HQTEJ AWEID LBFME AVQLV HZFLP ZQQTK PQUWD VTMXV TDQVR ASOPR ZGAJR UHMKF UWEXJ HGFLV KFQED ZCRGF UGQVM HHUWD VFFLV PABSJ AIDIJ VTBPL YOXMJ AGURV JIDIJ PBFLV JVGVT OVUWK VFKEE KHDEU PHUSE DVQXY LFAJR UQUIE ACDGF TDMVR AWHIC FFQGV UHFMD LGMVV ZINNV JHQHK VJQVP KWRJV YSZXY HBPPZ UURVF THTEK DVUGY AVQME KIXKV UQQSI JFQHL SWFCF MTAVD LFMKV ZQAYC KOXPF DAQVV ZHMXV TSZXJ HFQNV HZAYJ SMIEK JVQHR URFLV TCFMM LGAJK OSIVZ ASDJF YAMWZ TDAVK HBFEE PBSVV KWQRK PBFLV HBMPP ZWESW OWELZ ZHAVP HGFLV MOOXJ OSDIT VFPWG YCNES PZUXP PGMTF DSDJL SOZHK YCGFC LGAQV ASEXR URUXZ ZPKXY PGFVF BPXIJ VAQWK HBPEI KHTEK HZMVX LDAVK PCZSW OWEXF YWOEC LJUHV UQQMJ ZWRXV KQARJ PGFIE JMUWE VZQWJ WSDXZ UOOMF BGMRU LLMGK PBSME PHEHV TOZHJ PBNVZ LTFSN YWFIR OWEXF YMIID BGFOE VKYSI LHTEE TSDIW HQFWY BAMRE HHGVV CWQAV KIZHV YOZME KIOXZ VBAJV EHQRU LRQBG LFUIE JSUWK OSNIJ AVQPG ACFLV JFUXZ JWEQF MVGQR UVUWK VFKLZ ZHAVZ JOXGY HFMGK LFEGR UCZPP ISQWK PAMXV KPKXY LGFEE KODHN OWOLY BAMRV EDQVZ LBOIN OSFLV YOOXL HZAVK YOPMK PCZEI FVMWW BFZMJ OSPXF MCDQT VFDIT AJUIN ZCRME KWHMU BOXWN LAGWK YSSEI KHTID HGRSI TWZKG HFFWF MOSVV HHILF SSIID BGFQV HGGVV AVQQS FHTIZ YFQPR AWARK VHTID HGESW ISURX ZPKAY VAFLV FODIJ BFDSL URQHR URURT VBFID WZMXZ UUFLV PBOMU LBFWZ UHTIZ YZUZV ZCDGF URUXZ VBILZ JVFVR KWFMF UVMWY HBPIU KCIRK VIEAV TIEXI HHTII JCZWZ KSDXY LUQRV YOXFV HFURX VTFLV DVAPV UODVR AWHIK OOZXY LFQWG LQFMM LDDSS HPUPZ AMAJZ AGPIK HWXW".replace(/ /g, "")
console.log(ct8.ic(2, 8))

// https://macs4200.org/chapters/08/5/determining-keyword.html

console.log(Chi.key(ct8, 5))

// console.log(Vigenere.decrypt(ct8, "HOMER"))
{ 
    const pt = "THISISATESTOFTHEEMERGENCYBROADCASTSYSTEMIFTHISWEREONLYATEST"
    const ct = Vigenere.encrypt(pt, "READY")
    console.log(ct.ic(2, 8))
    console.log(Chi.key(ct, 5))
}

// TODO https://macs4200.org/chapters/06/4/chi-squared-scoring.html
{
    const ct = "KRETI JUKRP TUCHI GRDPT UHUJK XUDET IVVKP RIPER EYPWD KHPWO UPTIJ ULKJJ UDOKP TPTUU RDYIL OIHAY".replace(/ /g, "")
    console.log(Trithemius.decrypt(ct, ABC.step(ABC.offset(az26, 17), 4)), az26)
}

// Test whether ciphertext autokey exhibits the same vulnerability
{
    const pt = "THISISATESTOFTHEEMERGENCYBROADCASTSYSTEMIFTHISWEREONLYATEST"
    const ct = Cipherkey.encrypt(pt, "READY")
    console.log(ct.ic(2, 8))
    console.log(Chi.key(ct, 5))
}

// https://docs.google.com/document/d/1a4uOf7SkXEPCROEi1iHzU5Lbr3zMbtOqSq_J5c4kyOw
{
    const ct = "CWNTQHURZEMDFXUKGOUCHAVQTHNALZHXSEEIXHOQXKXDVPUCBSRRWQKQYWJLGJVLSMFBIWXQRVEIWEATMWNTPPBXZMXTYMSXWRQCGAUOFZWKMYXQCXBUMCYGMUZSNWBKEZWEZKZJJDXMISGYPHAVEDTEPKZQCIQSAHHEAFNQWFSXMXJBSMGLTABXTYRQNAJCYXQIAVNGVSNEKDTAZKZKLPUWUOTLMIHARSDLSZDISWWPUOAWUTSQRMUDMYYVGKHKQUQSFZEJDFBLRMJHVQQJZBMTBILRHSFBIBDACXTMIIFOABASELCRTWRJUXWSIBKEBZGEQZSQECSXVAKJMLUNEYDHNRBXFPBAKWABDLNOVNFNDCKBRHQLQZUIFYGARKAMYUJEEHCTBHQGVILDZTJEJCXGLUOJGOJUPTTNDBNVBWQDOVKPTPPRGAKJZCLPVXUUIPPMI"
    console.log(ct.ic(2, 78))
    const k = Chi.key(ct, 78)
    console.log(k)
    console.log(Vigenere.decrypt(ct, k))

    console.log(d[0].ic(2, 99, az83))
    const k13 = Chi.key(d[0], 13, az83)
    console.log(k13)
    console.log(Vigenere.decrypt(d[0], k13, az83))
}

{
    // const pt = "THISISATESTOFTHEEMERGENCYBROADCASTSYSTEMIFTHISWEREONLYATEST"
    // + "FAILTOCOMPLETEALAPBEFORETHESOUNDYOURTESTISOVERTHETESTWILLBEGINONTHEWORDSTARTONYOURMARKGETREADYSTART"
    const pt = "1) STARTBYTHINKINGSOMETHINGWHETHERYOUREALLYWANTTOGODOWNFORGODKNOWSTHEBYTHINKINGOFKNOWLEDGE[]ISPOWERFORTECHNOLOGY"
    const ct = Vigenere.encrypt(pt, "i!i", az83)
    console.log(ct.ic(2, 5))
    const k = Chi.key(ct, 3, az83)
    console.log(k)
    console.log(Vigenere.decrypt(ct, k, az83))
}

// http://www.practicalcryptography.com/cryptanalysis/text-characterisation/chi-squared-statistic/
{
    console.log(Chi.uniform(az83, az83))
    console.log(Chi.uniform("1. PACERTESTEMERGENCYTESTINGBROADCAST!", az83))

    const s1 = "aoljhlzhyjpwolypzvulvmaollhysplzaruvduhukzptwslzajpwolyzpapzhafwlvmzbizapabapvujpwolypudopjolhjoslaalypuaolwshpualeapzzopmalkhjlyahpuubtilyvmwshjlzkvduaolhswohila".toUpperCase()
    for (var i = 0; i < 26; i++) {
        // console.log(Vigenere.decrypt(s1.shift(i), s2, az83))
        const ct = Vigenere.decrypt(s1, az26[i])
        // console.log(ct)
        const f = new Frequencies(ct)
        const ic = f.ic()
        const chi = Chi.squared(ct).english
        // console.log(i, chi, f.ic_mono(), ic, ct)
    }
    console.log(Chi.key(s1, 1))
    console.log(Vigenere.decrypt(s1, "H", az26))
}

{
    const pt = "MUST CHANGE MEETING LOCATION FROM BRIDGE TO UNDERPASS SINCE ENEMY AGENTS ARE BELIEVED TO HAVE BEEN ASSIGNED TO WATCH BRIDGE STOP  MEETING TIME UNCHANGED".replace(/ /g, "")
    // const ct = "QPWKA LVRXC QZIKG RBPFA EOMFL  JMSDZ VDHXC XJYEB IMTRQ WNMEA IZRVK CVKVL XNEIC FZPZC ZZHKM  LVZVZ IZRRQ WDKEC HOSNY XXLSP MYKVQ XJTDC IOMEE XDQVS RXLRL  KZHOV".replace(/ /g, "")
    const ct = Vigenere.encrypt(pt, "EVERY", az83)
    // const ct = eyes[0]
    console.log(ct)
    console.log(new Frequencies(ct, az83))
    // console.log(ct.ic(2, 8, az83))
    console.log(ct.ic(2, 99, az83))
    // console.log(Chi.key(ct, 5, az83))
    console.log(Chi.key(ct, 5, az83))

    // console.log(Vigenere.decrypt(ct, "EVERY", az83))
    console.log(Vigenere.decrypt(ct, "]jZhm", az83))
}